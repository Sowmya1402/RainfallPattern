{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sreev\\\\OneDrive\\\\Documents\\\\Rainfall-Pattern\\\\RainFall-Pattern\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst numRows = 15;\nconst numCols = 20;\nconst colors = [['#00ff00', '#00e600', '#00cc00', '#00b300', '#009900', '#008000', '#006600', '#004d00'], ['#ff0000', '#e60000', '#cc0000', '#b30000', '#990000', '#800000', '#660000', '#4d0000'], ['#0000ff', '#0000e6', '#0000cc', '#0000b3', '#000099', '#000080', '#000066', '#00004d'], ['#ffa500', '#e69500', '#cc8500', '#b37500', '#996600', '#805600', '#664700', '#4d3700'], ['#8a2be2', '#7a25cc', '#6b1fb3', '#5c1999', '#4d1480', '#3e0e66', '#2f094d', '#200333'], ['#ffd700', '#e6c300', '#ccaf00', '#b39b00', '#998700', '#807300', '#665f00', '#4d4b00'], ['#ff00ff', '#e600e6', '#cc00cc', '#b300b3', '#990099', '#800080', '#660066', '#4d004d'], ['#00ffff', '#00e6e6', '#00cccc', '#00b3b3', '#009999', '#008080', '#006666', '#004d4d'], ['#ffff00', '#e6e600', '#cccc00', '#b3b300', '#999900', '#808000', '#666600', '#4d4d00'], ['#ff4500', '#e63e00', '#cc3700', '#b33000', '#992900', '#802200', '#661a00', '#4d1300']];\nconst createGrid = () => {\n  return Array.from({\n    length: numRows\n  }, () => Array(numCols).fill(false));\n};\nconst App = () => {\n  _s();\n  const [grid, setGrid] = useState(createGrid());\n  const [colorIndex, setColorIndex] = useState(0);\n  const colorIndexRef = useRef(colorIndex);\n  useEffect(() => {\n    const colorChangeInterval = setInterval(() => {\n      setColorIndex(prevIndex => {\n        const newIndex = (prevIndex + 1) % colors.length;\n        colorIndexRef.current = newIndex;\n        return newIndex;\n      });\n    }, 3000);\n    const rainfallIntervals = [];\n    for (let i = 0; i < maxActiveColumns; i++) {\n      const interval = setInterval(() => {\n        startRainfall();\n      }, Math.random() * 2000);\n      rainfallIntervals.push(interval);\n    }\n    return () => {\n      clearInterval(colorChangeInterval);\n      rainfallIntervals.forEach(interval => clearInterval(interval));\n    };\n  }, []);\n  const startRainfall = () => {\n    const randomColumn = Math.floor(Math.random() * numCols);\n    for (let i = 0; i < numRows + 5; i++) {\n      setTimeout(() => {\n        setGrid(prevGrid => {\n          const newGrid = prevGrid.map((row, rowIndex) => row.map((cell, colIndex) => {\n            if (colIndex === randomColumn) {\n              if (rowIndex >= i && rowIndex < i + 5) {\n                return colors[colorIndexRef.current][rowIndex - i];\n              } else if (rowIndex === i - 1) {\n                return false;\n              }\n            }\n            return cell;\n          }));\n          return newGrid;\n        });\n      }, i * 100);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"RainFall-Grid\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), grid.map((row, rowIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: row.map((cell, colIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        style: {\n          backgroundColor: cell ? cell : ''\n        }\n      }, colIndex, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this))\n    }, rowIndex, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"UhvGaSOfISlsl1LYBQPgpKkR1r8=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","useRef","jsxDEV","_jsxDEV","numRows","numCols","colors","createGrid","Array","from","length","fill","App","_s","grid","setGrid","colorIndex","setColorIndex","colorIndexRef","colorChangeInterval","setInterval","prevIndex","newIndex","current","rainfallIntervals","i","maxActiveColumns","interval","startRainfall","Math","random","push","clearInterval","forEach","randomColumn","floor","setTimeout","prevGrid","newGrid","map","row","rowIndex","cell","colIndex","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","_c","$RefreshReg$"],"sources":["C:/Users/sreev/OneDrive/Documents/Rainfall-Pattern/RainFall-Pattern/src/App.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport './App.css';\n\nconst numRows = 15;\nconst numCols = 20;\n\n\nconst colors = [\n  ['#00ff00', '#00e600', '#00cc00', '#00b300', '#009900', '#008000', '#006600', '#004d00'],\n  ['#ff0000', '#e60000', '#cc0000', '#b30000', '#990000', '#800000', '#660000', '#4d0000'], \n  ['#0000ff', '#0000e6', '#0000cc', '#0000b3', '#000099', '#000080', '#000066', '#00004d'],\n  ['#ffa500', '#e69500', '#cc8500', '#b37500', '#996600', '#805600', '#664700', '#4d3700'], \n  ['#8a2be2', '#7a25cc', '#6b1fb3', '#5c1999', '#4d1480', '#3e0e66', '#2f094d', '#200333'], \n  ['#ffd700', '#e6c300', '#ccaf00', '#b39b00', '#998700', '#807300', '#665f00', '#4d4b00'],\n  ['#ff00ff', '#e600e6', '#cc00cc', '#b300b3', '#990099', '#800080', '#660066', '#4d004d'], \n  ['#00ffff', '#00e6e6', '#00cccc', '#00b3b3', '#009999', '#008080', '#006666', '#004d4d'],\n  ['#ffff00', '#e6e600', '#cccc00', '#b3b300', '#999900', '#808000', '#666600', '#4d4d00'],\n  ['#ff4500', '#e63e00', '#cc3700', '#b33000', '#992900', '#802200', '#661a00', '#4d1300']\n];\n\nconst createGrid = () => {\n  return Array.from({ length: numRows }, () => Array(numCols).fill(false));\n};\n\nconst App = () => {\n  const [grid, setGrid] = useState(createGrid());\n  const [colorIndex, setColorIndex] = useState(0);\n  const colorIndexRef = useRef(colorIndex);\n\n  useEffect(() => {\n    const colorChangeInterval = setInterval(() => {\n      setColorIndex((prevIndex) => {\n        const newIndex = (prevIndex + 1) % colors.length;\n        colorIndexRef.current = newIndex;\n        return newIndex;\n      });\n    }, 3000);\n\n    const rainfallIntervals = [];\n    for (let i = 0; i < maxActiveColumns; i++) {\n      const interval = setInterval(() => {\n        startRainfall();\n      }, Math.random() * 2000);\n      rainfallIntervals.push(interval);\n    }\n\n    return () => {\n      clearInterval(colorChangeInterval);\n      rainfallIntervals.forEach((interval) => clearInterval(interval));\n    };\n  }, []);\n\n  const startRainfall = () => {\n    const randomColumn = Math.floor(Math.random() * numCols);\n    for (let i = 0; i < numRows + 5; i++) {\n      setTimeout(() => {\n        setGrid((prevGrid) => {\n          const newGrid = prevGrid.map((row, rowIndex) =>\n            row.map((cell, colIndex) => {\n              if (colIndex === randomColumn) {\n                if (rowIndex >= i && rowIndex < i + 5) {\n                  return colors[colorIndexRef.current][rowIndex - i];\n                } else if (rowIndex === i - 1) {\n                  return false;\n                }\n              }\n              return cell;\n            })\n          );\n          return newGrid;\n        });\n      }, i * 100);\n    }\n  };\n\n  return (\n    <div className=\"grid\">\n      <h1>RainFall-Grid</h1>\n      {grid.map((row, rowIndex) => (\n        <div key={rowIndex} className=\"row\">\n          {row.map((cell, colIndex) => (\n            <div\n              key={colIndex}\n              className=\"cell\"\n              style={{ backgroundColor: cell ? cell : '' }}\n            />\n          ))}\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}